{"version":3,"sources":["index.js","Marker.js","Map.js","Metrics.js","Console.js","App.js","Game.js"],"names":["game","currPlaces","currPlace","Marker","className","onClick","props","onSelect","place","style","backgroundColor","this","color","cursor","title","name","React","Component","Map","renderInfo","isOwned","onMarkerClick","markers","i","places","length","push","lat","lng","text","p","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","Metrics","metricData","level","numOwned","credits","Console","isOver","data","placeData","message","city","country","population","metrics","reset","isInit","placeName","latDisplay","String","substring","latHemisphere","lngDisplay","lngHemisphere","onQuit","App","onMapAction","onChange","Game","gameConfig","loadGame","currLvlIdx","currLvlPlaces","isLvlInit","startCredits","currentCredits","placeReadyListeners","resetGame","j","Number","Math","round","random","isTreasure","lvl","index","resetPlace","idx","addPlaceReadyListener","listener","levelUp","resetLevel","indexToIdx","findPlaceData","a","latFormat","lngFormat","latDecStart","indexOf","latDecs","lngDecStart","lngDecs","axios","method","url","params","limit","minPopulation","radius","headers","placeResponse","map","verbalAlert","hl","src","f","c","r","responseType","verbalResponse","status","mp3","Blob","type","window","URL","createObjectURL","audio","Audio","load","play","addTreasure","addPlace","getGift","giftingPlaces","filter","floor","getMetrics","checkLevelOver","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","onAuthStateChanged","user","uid","setup","login","ReactDOM","render","StrictMode","id","email","document","getElementById","value","trim","password","signInWithEmailAndPassword","catch","error","signIn","createUserWithEmailAndPassword","createAccount","logout","signOut","gameConverter","toFirestore","g","fromFirestore","snapshot","options","docRef","doc","getFirestore","getDoc","withConverter","docSnap","exists","placeInfo","completeTurn","prepareLevel","slice","startTurn","showBankrupt","updateDB","showLevelChange","ref","setDoc","deleteDoc","deleteFromDB"],"mappings":"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","file":"static/js/main.731d7297.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Game from './Game';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, setDoc, deleteDoc, getDoc } from 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyAiw4SHAIlf53C2leMA3q4F-r3jRJt1SC8\",\n    authDomain: \"comp-426-final-b5799.firebaseapp.com\",\n    projectId: \"comp-426-final-b5799\",\n    storageBucket: \"comp-426-final-b5799.appspot.com\",\n    messagingSenderId: \"272040014494\",\n    appId: \"1:272040014494:web:b17bc8da100c4e77d8c18f\",\n    measurementId: \"G-FB8ZYMPB4H\"\n};\n\ninitializeApp(config);\n\ngetAuth().onAuthStateChanged((user) => {\n  if (user) {\n    uid = user.uid;\n    setup();\n  } else {\n    uid = null;\n    login(null);\n  }\n});\n\nlet game;\nlet currPlaces;\nlet currPlace;\nlet uid = null;\nlogin(null);\n\nfunction login(message) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <div className=\"login\">\n        <h1>Log in or create an account for your chance to OWN THE WORLD!</h1>\n        <div>\n          <label>\n            Email\n          </label>\n          <input id=\"emailInput\"></input>\n          <br />\n          <br />\n          <label>\n            Password\n          </label>\n          <input id=\"pwInput\"></input>\n          <br />\n          <button className=\"okBtn\" onClick={() => {\n            signIn();\n            login(\"Attempting to log in. If this message persists, log in failed.\");\n          }}>Log In</button>\n          <button className=\"dangerBtn\" onClick={() => {\n            createAccount();\n            login(\"Attempting to create account. If this message persists, account creation failed.\");\n          }}>Create Account</button>\n          {message == null? <span></span> : <p className=\"errorMessage\">{message}</p>}\n        </div>\n      </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nfunction signIn() {\n  let email = String(document.getElementById(\"emailInput\").value).trim();\n  let password = String(document.getElementById(\"pwInput\").value).trim();\n  if (email.length == 0 || password.length == 0) {\n    return;\n  }\n  signInWithEmailAndPassword(getAuth(), email, password).catch((error) => {\n    let errorMessage = error.message;\n  });\n}\n\nfunction logout() {\n  signOut(getAuth());\n}\n\nfunction createAccount() {\n  let email = String(document.getElementById(\"emailInput\").value).trim();\n  let password = String(document.getElementById(\"pwInput\").value).trim();\n  if (email.length == 0 || password.length == 0) {\n    return;\n  }\n  createUserWithEmailAndPassword(getAuth(), email, password)\n    .catch((error) => {\n      let errorMessage = error.message;\n    });\n}\n\nconst gameConverter = {\n  toFirestore: (g) => {\n      return {\n          level: g.level,\n          currLvlIdx: g.currLvlIdx,\n          currLvlPlaces: g.currLvlPlaces,\n          isLvlInit: g.isLvlInit,\n          numOwned: g.numOwned,\n          startCredits: g.startCredits,\n          currentCredits: g.currentCredits,\n          places: g.places,\n      };\n  },\n  fromFirestore: (snapshot, options) => {\n      const data = snapshot.data(options);\n      const gameConfig = {\n        level: data.level,\n        currLvlIdx: data.currLvlIdx,\n        currLvlPlaces: data.currLvlPlaces,\n        isLvlInit: data.isLvlInit,\n        numOwned: data.numOwned,\n        startCredits: data.startCredits,\n        currentCredits: data.currentCredits,\n        places: data.places,\n      }\n      return new Game(gameConfig);\n  }\n};\n\nasync function setup() {\n  const docRef = doc(getFirestore(), \"users\", uid);\n  const docSnap = await getDoc(docRef.withConverter(gameConverter));\n  if (docSnap.exists()) {\n      game = docSnap.data();\n  }\n  else {\n      game = new Game(null);\n  }\n  currPlaces = [];\n  currPlace = null;\n  game.addPlaceReadyListener((placeInfo, index) => completeTurn(placeInfo, index));\n  prepareLevel();\n}\n\nfunction prepareLevel() {\n  currPlaces = game.places.slice(game.currLvlIdx, game.currLvlIdx + game.currLvlPlaces);\n  startTurn();\n}\n\nfunction startTurn() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App \n        onMapAction={(place) => {\n          if (!game.isOver) {\n            currPlace = place;\n            game.findPlaceData(place);\n          }\n        }}\n        isInit={game.isLvlInit}\n        isOver={game.isOver}\n        currPlaces={currPlaces}\n        place={currPlace}\n        metrics={game.getMetrics()}\n        onChange={startTurn}\n        reset={resetGame}\n        onQuit={logout}\n      />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nfunction completeTurn(placeInfo, index) {\n  let isBankrupt = (placeInfo == null? game.addTreasure(index) : game.addPlace(index, placeInfo));\n  if (isBankrupt) {\n    showBankrupt(placeInfo);\n  }\n  else if (game.numOwned == game.places.length) {\n    endGame();\n  }\n  else {\n    currPlace.placeData = placeInfo;\n    game.checkLevelOver()? showLevelChange(placeInfo): startTurn();\n  }\n}\n\nfunction showBankrupt(placeInfo) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <div className=\"transition failure\">\n        <h1>You went bankrupt trying to buy {placeInfo.city}, {placeInfo.country} (population {placeInfo.population})!</h1>\n        <button className=\"dangerBtn\" onClick={startTurn}>Retry Level</button>\n      </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nfunction showLevelChange(placeInfo) {\n  updateDB();\n  let message = placeInfo == null? <h1>You leveled up after finding treasure!</h1> :\n                <h1>You leveled up after buying {placeInfo.city}, {placeInfo.country} (population {placeInfo.population})!</h1>;\n  ReactDOM.render(\n    <React.StrictMode>\n      <div className=\"transition success\">\n        {message}\n        <button className=\"okBtn\" onClick={prepareLevel}>Continue</button>\n      </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nasync function updateDB() {\n  const ref = doc(getFirestore(), \"users\", uid).withConverter(gameConverter);\n  await setDoc(ref, game);\n}\n\nasync function deleteFromDB() {\n  await deleteDoc(doc(getFirestore(), \"users\", uid));\n}\n\nfunction endGame() {\n  game.isOver = true;\n  startTurn();\n}\n\nfunction resetGame() {\n  if (game.level > 1) {\n    deleteFromDB();\n  }\n  game.resetGame();\n  setup();\n}","import React from 'react';\r\nimport './Marker.css';\r\n\r\nexport default class Marker extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"marker\" onClick={() => this.props.onSelect(this.props.place)}\r\n          style={{ backgroundColor: this.props.color, cursor: 'pointer'}}\r\n          title={this.props.name}\r\n        />\r\n      );\r\n    }\r\n  };","import React, { Component} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\n\r\nexport default class Map extends Component {\r\n    renderInfo = (place) => {\r\n      if (place.isOwned) {\r\n        return;\r\n      }\r\n      place.isOwned = true;\r\n      this.props.onMarkerClick(place);\r\n    }\r\n  \r\n    render() {\r\n      let center = {lat: 0.0000, lng: 0.0000};\r\n      let zoom = 1;\r\n      let markers = [];\r\n      for (let i = 0; i < this.props.places.length; i++) {\r\n          markers.push(<Marker\r\n              lat={this.props.places[i].lat}\r\n              lng={this.props.places[i].lng}\r\n              text=\"Other Marker\"\r\n              color={this.props.places[i].isOwned? \"green\" : \"red\"}\r\n              key={\"Marker\" + i}\r\n              place={this.props.places[i]}\r\n              onSelect={(p) => this.renderInfo(p)}\r\n            />);\r\n      }\r\n      return (\r\n        <div style={{ height: '90vh', width: '100%' }}>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{ key: 'AIzaSyCBiPt3I-zY_PzgJDpd-ANrtfkrUcM2HfM' }}\r\n            defaultCenter={center}\r\n            defaultZoom={zoom}\r\n          >\r\n            {markers}\r\n          </GoogleMapReact>\r\n        </div>\r\n      );\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class Metrics extends React.Component {\r\n    render() {\r\n        return <div>\r\n            <h4>Your Score Metrics</h4>\r\n            <p>Level {this.props.metricData.level}</p>\r\n            <p>Places Owned: {this.props.metricData.numOwned}</p>\r\n            <p>Cash: ${this.props.metricData.credits}</p>\r\n        </div>;\r\n    }\r\n}","import React from 'react';\r\nimport Metrics from './Metrics.js'\r\nimport './Console.css'\r\n\r\nexport default class Console extends React.Component {\r\n    render() {\r\n        if (this.props.isOver) {\r\n            let data = this.props.place.placeData;\r\n            let message = (data == null? <span>Congrats on your treasure find.</span> :\r\n                        <span>Congrats on your purchase of {data.city}, {data.country} (population {data.population}).</span>);\r\n            return <div style={{height: '100%', width: '50%'}}>\r\n                <h1>You Won!</h1>\r\n                <h3>{message} You can now sort of say that you 'own the world.' Here are your stats:</h3>\r\n                <Metrics metricData={this.props.metrics} />\r\n                <button className=\"resetBtn\" onClick={this.props.reset}>Play Again</button>\r\n            </div>\r\n        }\r\n        else if (this.props.isInit) {\r\n            let data = this.props.place.placeData;\r\n            let placeName = data == null? <span></span> : <p>{data.city}, {data.country}<br />Population: {data.population}</p>\r\n            let latDisplay = (this.props.place.lat > 0? String(this.props.place.lat).substring(0, 7) : String(this.props.place.lat).substring(1).substring(0, 7));\r\n            let latHemisphere = (this.props.place.lat > 0? \"N\" : \"S\");\r\n            let lngDisplay = (this.props.place.lng > 0? String(this.props.place.lng).substring(0, 7) : String(this.props.place.lng).substring(1).substring(0, 7));\r\n            let lngHemisphere = (this.props.place.lng > 0? \"E\" : \"W\");\r\n            return <div style={{height: '100%', width: '50%'}}>\r\n                <p>You selected a location at coordinates {latDisplay}&deg;{latHemisphere}, {lngDisplay}&deg;{lngHemisphere}</p>\r\n                {placeName}\r\n                <Metrics metricData={this.props.metrics} />\r\n            </div>;\r\n        }\r\n        else {\r\n            return <div style={{height: '100%', width: '100%'}}>\r\n                <h3>Welcome to a game of both chance and wits!</h3>\r\n                <p>You're a newly minted billionaire seeking to \"own the world.\" The objective here is to buy all the places shown by the markers on the map with the $1 billion provided. The game is split into levels, and if you go bankrupt trying to buy a place, you'll have to restart the level.</p>\r\n                <p>The catch here is that the cost of a place is determined by its population, which a player with integrity wouldn't know until they click the marker to buy it. That's right! You're a billionaire who's investing blind for kicks.</p>\r\n                <p>Click on a marker to start level {this.props.metrics.level} of the game.</p>\r\n                <Metrics metricData={this.props.metrics} />\r\n                <button onClick={this.props.onQuit}>Quit and Log Out</button>\r\n            </div>;\r\n        }\r\n    }\r\n}","import './App.css';\nimport React from 'react';\nimport Map from './Map';\nimport Console from './Console';\n\nexport default class App extends React.Component {\n  render() {\n    return <div className=\"float-container\">\n      <div className=\"float-child\"><Map\n        places={this.props.currPlaces}\n        onMarkerClick={(place) => {\n          this.props.onMapAction(place);\n          this.props.onChange();\n        }}\n      /></div>\n      <div className=\"float-child\"><Console\n        isInit={this.props.isInit}\n        isOver={this.props.isOver}\n        place={this.props.place}\n        metrics={this.props.metrics}\n        reset={this.props.reset}\n        onQuit={this.props.onQuit}\n      /></div>\n    </div>;\n  }\n}","import axios from 'axios';\r\n\r\nexport default class Game {\r\n    constructor(gameConfig) {\r\n        gameConfig != null? this.loadGame(gameConfig) : this.resetGame();\r\n    }\r\n\r\n    loadGame = (gameConfig) => {\r\n        this.level = gameConfig.level;\r\n        this.currLvlIdx = gameConfig.currLvlIdx;\r\n        this.currLvlPlaces = gameConfig.currLvlPlaces;\r\n        this.isLvlInit = gameConfig.isLvlInit;\r\n        this.numOwned = gameConfig.numOwned;\r\n        this.startCredits = gameConfig.startCredits;\r\n        this.currentCredits = gameConfig.currentCredits;\r\n        this.places = gameConfig.places;\r\n        this.placeReadyListeners = [];\r\n        this.isOver = false;\r\n    }\r\n\r\n    resetGame = () => {\r\n        this.level = 1;\r\n        this.currLvlIdx = 0;\r\n        this.currLvlPlaces = 5;\r\n        this.isLvlInit = false;\r\n        this.numOwned = 0;\r\n        this.startCredits = 1000000000;\r\n        this.currentCredits = this.startCredits;\r\n        this.places = [];\r\n        for (let i = 1; i <= 2; i++) {\r\n            for (let j = 1; j < 5 + i; j++) {\r\n                this.places.push({\r\n                    lat: Number(Math.round(Math.random() * 120 * 10000000)) / 10000000 - 50,\r\n                    lng: Number(Math.round(Math.random() * 360 * 10000000)) / 10000000 - 180,\r\n                    placeData: null,\r\n                    isOwned: false,\r\n                    isTreasure: false,\r\n                    lvl: i,\r\n                    index: (i - 1) * j,\r\n                });\r\n            }\r\n        }\r\n        this.placeReadyListeners = [];\r\n        this.isOver = false;\r\n    }\r\n\r\n    resetPlace = (idx) => {\r\n        this.places[idx].lat = Number(Math.round(Math.random() * 120 * 10000000)) / 10000000 - 50;\r\n        this.places[idx].lng = Number(Math.round(Math.random() * 360 * 10000000)) / 10000000 - 180;\r\n        this.places[idx].placeData = null;\r\n        this.places[idx].isOwned = false;\r\n        this.places[idx].isTreasure = false;\r\n    }\r\n\r\n    addPlaceReadyListener = (listener) => {\r\n        this.placeReadyListeners.push(listener);\r\n    }\r\n\r\n    levelUp = () => {\r\n        this.currLvlIdx = this.currLvlIdx += this.currLvlPlaces;\r\n        this.level++;\r\n        this.currLvlPlaces++;\r\n        this.isLvlInit = false;\r\n        this.startCredits = this.currentCredits;\r\n    }\r\n\r\n    resetLevel = () => {\r\n        this.currentCredits = this.startCredits;\r\n        this.isLvlInit = false;\r\n        for (let i = this.currLvlIdx; i < this.currLvlIdx + this.currLvlPlaces; i++) {\r\n            this.resetPlace(i);\r\n        }\r\n        this.numOwned = this.currLvlIdx;\r\n    }\r\n\r\n    indexToIdx = (index) => {\r\n        for (let idx = 0; idx < this.places.length; idx++) {\r\n            if (this.places[idx].index == index) {\r\n                return idx;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    findPlaceData = async (place) => {\r\n        let latFormat = String(place.lat);\r\n        let lngFormat = String(place.lng);\r\n        let latDecStart = latFormat.indexOf(\".\") + 1;\r\n        let latDecs = latFormat.substring(latDecStart).length;\r\n        while (latDecs < 6) {\r\n            latFormat = latFormat + \"0\";\r\n            latDecs++;\r\n        }\r\n        if (latDecs > 6) {\r\n            latFormat = latFormat.substring(0, latDecStart + 6);\r\n        }\r\n        let lngDecStart = lngFormat.indexOf(\".\") + 1;\r\n        let lngDecs = lngFormat.substring(lngDecStart).length;\r\n        while (lngDecs < 6) {\r\n            lngFormat = lngFormat + \"0\";\r\n            lngDecs++;\r\n        }\r\n        if (lngDecs > 6) {\r\n            lngFormat = lngFormat.substring(0, lngDecStart + 6);\r\n        }\r\n\r\n        if (place.lng > 0) {\r\n            lngFormat = '+' + lngFormat;\r\n        }\r\n        if (lngFormat[4] != '.') {\r\n            lngFormat = lngFormat.substring(0, 1) + '0' + lngFormat.substring(1);\r\n        }\r\n        const placeResponse = (await axios({\r\n            method: 'GET',\r\n            url: 'https://wft-geo-db.p.rapidapi.com/v1/geo/locations/' + latFormat + lngFormat + '/nearbyCities',\r\n            params: {\r\n                limit: '1',\r\n                minPopulation: '1000',\r\n                radius: '100',\r\n            },\r\n            headers: {\r\n                'x-rapidapi-key': 'b9385517f7msh0db6fd312c19076p1c2f31jsn02a89c97185e',\r\n                'x-rapidapi-host': 'wft-geo-db.p.rapidapi.com'\r\n            }\r\n        })).data;\r\n        this.placeReadyListeners.map((listener) => {\r\n            listener(placeResponse.data.length > 0? placeResponse.data[0] : null, place.index)\r\n        });\r\n    }\r\n\r\n    verbalAlert = async (message) => {\r\n        message = String(message);\r\n        const verbalResponse = await axios({\r\n            method: 'GET',\r\n            url: 'https://voicerss-text-to-speech.p.rapidapi.com/',\r\n            params: {\r\n              key: 'e4fc13656d804948b8c576a8732f6764',\r\n              hl: 'en-us',\r\n              src: {message},\r\n              f: '8khz_8bit_mono',\r\n              c: 'mp3',\r\n              r: '0'\r\n            },\r\n            headers: {\r\n              'x-rapidapi-key': 'b9385517f7msh0db6fd312c19076p1c2f31jsn02a89c97185e',\r\n              'x-rapidapi-host': 'voicerss-text-to-speech.p.rapidapi.com'\r\n            },\r\n            responseType: 'blob',\r\n        });\r\n        if (verbalResponse.status == 200) {\r\n            const mp3 = new Blob([verbalResponse.data], { type: 'audio/mp3' });\r\n            const url = window.URL.createObjectURL(mp3);\r\n            const audio = new Audio(url);\r\n            audio.load();\r\n            await audio.play();\r\n        }\r\n    }\r\n\r\n    addTreasure = (index) => {\r\n        this.verbalAlert(\"Treasure!\");\r\n        let idx = this.indexToIdx(index);\r\n        this.isLvlInit = true;\r\n        this.numOwned++;\r\n        this.places[idx].isTreasure = true;\r\n        this.currentCredits += 10000000;\r\n        return false;\r\n    }\r\n\r\n    addPlace = (index, data) => {\r\n        let idx = this.indexToIdx(index);\r\n        this.isLvlInit = true;\r\n        this.places[idx].placeData = data;\r\n        this.numOwned++;\r\n        this.currentCredits -= data.population * 10000;\r\n        if (this.currentCredits < 0) {\r\n            this.resetLevel();\r\n            return true;\r\n        }\r\n        else {\r\n            this.getGift();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getGift = () => {\r\n        let giftingPlaces = this.places.filter((place) => (place.isOwned && !place.isTreasure && place.placeData != null));\r\n        if (giftingPlaces.length > 0) {\r\n            this.currentCredits +=\r\n                giftingPlaces[Math.floor(Math.random() * giftingPlaces.length)].placeData.population * 10000;\r\n        }\r\n    }\r\n\r\n    getMetrics = () => {\r\n        return {\r\n            level: this.level,\r\n            numOwned: this.numOwned,\r\n            credits: this.currentCredits,\r\n        };\r\n    }\r\n\r\n    checkLevelOver = () => {\r\n        for (let i = this.currLvlIdx; i < this.currLvlIdx + this.currLvlPlaces; i++) {\r\n            if (!this.places[i].isOwned) {\r\n                return false;\r\n            }\r\n        }\r\n        this.levelUp();\r\n        return true;\r\n    }\r\n}"],"sourceRoot":""}